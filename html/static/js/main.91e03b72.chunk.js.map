{"version":3,"sources":["SearchAppBar.js","EnhancedTable.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","counter","createData","date","grain_id","l_value","harmful","photo","id","desc","b","orderBy","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","_this","onRequestSort","_this2","this","_this$props","onSelectAllClick","order","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","onChange","map","row","key","align","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","Component","EnhancedTableToolbar","classNames","highlight","spacer","actions","Delete_default","FilterList_default","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTable","state","selected","data","page","rowsPerPage","handleRequestSort","_this3","setState","handleSelectAllClick","target","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","_this4","_this$state","emptyRows","Math","min","Paper_default","EnhancedTable_EnhancedTableToolbar","tableWrapper","Table_default","table","aria-labelledby","EnhancedTable_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","style","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","nextProps","prevState","sample","marginTop","minWidth","overflowX","createMuiTheme","App","axios","get","then","response","catch","error","console","log","core_styles","src_SearchAppBar","Grid_default","container","justify","item","xs","src_EnhancedTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91e03b72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            Grain Analysis\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nlet counter = 0;\nfunction createData(date, grain_id, l_value, harmful, photo) {\n  counter += 1;\n  return { id: counter, date, grain_id, l_value, harmful, photo };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: 'date', numeric: false, disablePadding: true, label: 'Date' },\n  { id: 'grain_id', numeric: true, disablePadding: false, label: 'Grain ID' },\n  { id: 'l_value', numeric: true, disablePadding: false, label: 'L Value' },\n  { id: 'harmful', numeric: true, disablePadding: false, label: 'Detected Harmful' },\n  { id: 'photo', numeric: true, disablePadding: false, label: 'Photo' },\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this,\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Samples\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass EnhancedTable extends React.Component {\n\n  state = {\n    order: 'asc',\n    orderBy: 'date',\n    selected: [],\n    data: [\n      createData('12/12/18', 1, 3.7, 'True', 'photo1.jpg'),\n      createData('13/12/18', 2, 1.7, 'False', 'photo2.jpg'),\n    ],\n    page: 0,\n    rowsPerPage: 10,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {data: nextProps.sample};\n  }\n  \n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.grain_id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const {data, order, orderBy, selected, rowsPerPage, page } = this.state;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.grain_id);\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.grain_id)}\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.grain_id}\n                      selected={isSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.date}\n                      </TableCell>\n                      <TableCell align=\"right\">{n.grain_id}</TableCell>\n                      <TableCell align=\"right\">{n.l_value}</TableCell>\n                      <TableCell align=\"right\">{n.harmful ? \"True\" : \"False\"}</TableCell>\n                      <TableCell align=\"right\">{n.photo}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SearchAppBar from './SearchAppBar';\nimport EnhancedTable from './EnhancedTable';\nimport axios from 'axios'\nimport './App.css';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFB300'\n    },\n  },\n});\n\nclass App extends React.Component {\n\n  state = {\n    sample: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost/api/sample\")\n      .then(response => {\n        this.setState((state, props) => ({sample: response.data}));\n        /*\n        // create an array of contacts only with relevant data\n        const newContacts = response.data.map(c => {\n          return {\n            id: c.id,\n            name: c.name\n          };\n        });\n\n        // create a new \"State\" object without mutating \n        // the original State object. \n        const newState = Object.assign({}, this.state, {\n          contacts: newContacts\n        });\n\n        // store the new state object in the component's state\n        this.setState(newState);\n        */\n\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <SearchAppBar />\n        <Grid container spacing={24} justify=\"center\">\n  \n          <Grid item xs={8}>\n            <EnhancedTable sample={this.state.sample}/>\n          </Grid>\n        </Grid>\n      </div>\n      </MuiThemeProvider>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}